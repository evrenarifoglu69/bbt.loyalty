// <auto-generated />
using System;
using Bbt.Campaign.EntityFrameworkCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bbt.Campaign.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(CampaignDbContext))]
    [Migration("20220314184528_ismail")]
    partial class ismail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.AchievementFrequencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AchievementFrequencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8154),
                            IsDeleted = false,
                            Name = "Haftalık"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8155),
                            IsDeleted = false,
                            Name = "Aylık"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8156),
                            IsDeleted = false,
                            Name = "Yıllık"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.AchievementTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AchievementTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7464),
                            IsDeleted = false,
                            Name = "Mevduat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7530),
                            IsDeleted = false,
                            Name = "Kredi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7565),
                            IsDeleted = false,
                            Name = "Cashback"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ActionOptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ActionOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7760),
                            IsDeleted = false,
                            Name = "Ödeme Cashback"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7822),
                            IsDeleted = false,
                            Name = "Fatura Cashback"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.BranchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "9530",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8067),
                            IsDeleted = false,
                            Name = "Merkez"
                        },
                        new
                        {
                            Id = 2,
                            Code = "9531",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8068),
                            IsDeleted = false,
                            Name = "Çamlıca Şubesi"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.BusinessLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("BusinessLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(5992),
                            IsDeleted = false,
                            Name = "Bireysel (B)"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6206),
                            IsDeleted = false,
                            Name = "Ticari (T)"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6253),
                            IsDeleted = false,
                            Name = "Dijital (X)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6288),
                            IsDeleted = false,
                            Name = "Ticari 1 (I)"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6325),
                            IsDeleted = false,
                            Name = "Ticari 2 (P)"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6360),
                            IsDeleted = false,
                            Name = "Ticari 3 (M)"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6396),
                            IsDeleted = false,
                            Name = "Kurumsal (K)"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6427),
                            IsDeleted = false,
                            Name = "Kurumsal 1 (A)"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignAchievementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AchievementTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ActionOptionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CampaignChannelId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxUtilization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AchievementTypeId");

                    b.HasIndex("ActionOptionId");

                    b.HasIndex("CampaignChannelId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CampaignAchievements");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignChannelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CampaignChannels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8128),
                            IsDeleted = false,
                            Name = "Tümü"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8129),
                            IsDeleted = false,
                            Name = "Batch"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8129),
                            IsDeleted = false,
                            Name = "Bayi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8130),
                            IsDeleted = false,
                            Name = "Diğer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8131),
                            IsDeleted = false,
                            Name = "İnternet"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8132),
                            IsDeleted = false,
                            Name = "Ptt"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8133),
                            IsDeleted = false,
                            Name = "Remote"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8134),
                            IsDeleted = false,
                            Name = "Sms"
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8134),
                            IsDeleted = false,
                            Name = "Şube"
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8135),
                            IsDeleted = false,
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8136),
                            IsDeleted = false,
                            Name = "Web"
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8137),
                            IsDeleted = false,
                            Name = "Web Bayi"
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8138),
                            IsDeleted = false,
                            Name = "Web Mevduat"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CampaignDetailImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignListImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentEn")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("ContentTr")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailEn")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("DetailTr")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SummaryEn")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("SummaryTr")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.ToTable("CampaignDetails");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDocumentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignDocuments");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBundle")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNumberOfUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ProgramTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramTypeId");

                    b.HasIndex("SectorId");

                    b.HasIndex("ViewOptionId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBranchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId");

                    b.ToTable("CampaignRuleBranches");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBusinessLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessLineId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessLineId");

                    b.HasIndex("CampaignRuleId");

                    b.ToTable("CampaignRuleBusinesses");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleCustomerTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("CampaignRuleCustomerTypes");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignStartTermId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JoinTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.HasIndex("CampaignStartTermId");

                    b.HasIndex("JoinTypeId");

                    b.ToTable("CampaignRules");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleIdentityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identities")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId")
                        .IsUnique();

                    b.ToTable("CampaignRuleIdentities");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignStartTermEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("CampaignStartTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8084),
                            IsDeleted = false,
                            Name = "Katılım Anında"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8085),
                            IsDeleted = false,
                            Name = "Dönem Başlangıcı"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTargetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TargetDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("TargetOperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("TargetDefinitionId");

                    b.HasIndex("TargetOperationId");

                    b.ToTable("CampaignTargets");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTopLimitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AchievementFrequencyId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxTopLimitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxTopLimitRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxTopLimitUtilization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AchievementFrequencyId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CampaignTopLimits");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CurrencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TRY",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8168),
                            IsDeleted = false,
                            Name = "TRY"
                        },
                        new
                        {
                            Id = 2,
                            Code = "GBP",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8169),
                            IsDeleted = false,
                            Name = "GBP"
                        },
                        new
                        {
                            Id = 3,
                            Code = "EUR",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8170),
                            IsDeleted = false,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8171),
                            IsDeleted = false,
                            Name = "USD"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CustomerTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(6906),
                            IsDeleted = false,
                            Name = "Gerçek"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7152),
                            IsDeleted = false,
                            Name = "Tüzel"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7190),
                            IsDeleted = false,
                            Name = "Ortak"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7220),
                            IsDeleted = false,
                            Name = "Reşit Olmayan"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7255),
                            IsDeleted = false,
                            Name = "Adi Ortaklık"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.JoinTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("JoinTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8050),
                            IsDeleted = false,
                            Name = "Tüm Müşteriler"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8052),
                            IsDeleted = false,
                            Name = "Müşteri Özelinde"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8053),
                            IsDeleted = false,
                            Name = "İş Kolu Özelinde"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8054),
                            IsDeleted = false,
                            Name = "Şube Özelinde"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8054),
                            IsDeleted = false,
                            Name = "Müşteri Tipi Özelinde"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.LanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TR",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7942),
                            IsDeleted = false,
                            Name = "Türkçe"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EN",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(7944),
                            IsDeleted = false,
                            Name = "İngilizce"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ProgramTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ProgramTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8184),
                            IsDeleted = false,
                            Name = "Sadakat"
                        },
                        new
                        {
                            Id = 2,
                            Code = "GK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8185),
                            IsDeleted = false,
                            Name = "Kampanya"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8186),
                            IsDeleted = false,
                            Name = "Kazanım"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.SectorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Akr",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8016),
                            IsDeleted = false,
                            Name = "Akaryakıt"
                        },
                        new
                        {
                            Id = 2,
                            Code = "IT",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8018),
                            IsDeleted = false,
                            Name = "Bilişim"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Bnk",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8019),
                            IsDeleted = false,
                            Name = "Bankacılık"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDefinitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetDefinitions");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdditionalFlowTime")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowFrequency")
                        .HasColumnType("int");

                    b.Property<string>("FlowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfTransaction")
                        .HasColumnType("int");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetDetailEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetDetailTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.Property<int>("TargetSourceId")
                        .HasColumnType("int");

                    b.Property<int>("TargetViewTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TriggerTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("VerificationTimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetId")
                        .IsUnique();

                    b.HasIndex("TargetSourceId");

                    b.HasIndex("TargetViewTypeId");

                    b.HasIndex("TriggerTimeId");

                    b.HasIndex("VerificationTimeId");

                    b.ToTable("TargetDetails");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("TargetGroups");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TargetGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("TargetId");

                    b.ToTable("TargetGroupLines");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetOperationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetOperations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8112),
                            IsDeleted = false,
                            Name = "ve"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8114),
                            IsDeleted = false,
                            Name = "veya"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8115),
                            IsDeleted = false,
                            Name = "kesişim"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8116),
                            IsDeleted = false,
                            Name = "fark"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetSourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("TargetSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8285),
                            IsDeleted = false,
                            Name = "Akış"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8286),
                            IsDeleted = false,
                            Name = "Sorgu"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetViewTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetViewTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8199),
                            IsDeleted = false,
                            Name = "Progress Bar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8229),
                            IsDeleted = false,
                            Name = "Bilgi"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TriggerTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TriggerTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8260),
                            IsDeleted = false,
                            Name = "Hedefe Ulaşıldığı Anda"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8262),
                            IsDeleted = false,
                            Name = "Tamamlandıktan Sonra"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.VerificationTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VerificationTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8273),
                            IsDeleted = false,
                            Name = "İlk Kontrol Edildiğinde"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8274),
                            IsDeleted = false,
                            Name = "Her Kontrol Edildiğinde"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ViewOptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ViewOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8035),
                            IsDeleted = false,
                            Name = "Sürekli Kampanyalar"
                        },
                        new
                        {
                            Id = 2,
                            Code = "GK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8036),
                            IsDeleted = false,
                            Name = "Geçici Kampanyalar"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 3, 14, 21, 45, 26, 571, DateTimeKind.Local).AddTicks(8037),
                            IsDeleted = false,
                            Name = "Anlık Kampanyalar"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignAchievementEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.AchievementTypeEntity", "AchievementType")
                        .WithMany()
                        .HasForeignKey("AchievementTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ActionOptionEntity", "ActionOption")
                        .WithMany()
                        .HasForeignKey("ActionOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignChannelEntity", "Channel")
                        .WithMany()
                        .HasForeignKey("CampaignChannelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany("Achievements")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CurrencyEntity", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AchievementType");

                    b.Navigation("ActionOption");

                    b.Navigation("Campaign");

                    b.Navigation("Channel");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithOne("CampaignDetail")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", "CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDocumentEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.ProgramTypeEntity", "ProgramType")
                        .WithMany()
                        .HasForeignKey("ProgramTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.SectorEntity", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ViewOptionEntity", "ViewOption")
                        .WithMany()
                        .HasForeignKey("ViewOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProgramType");

                    b.Navigation("Sector");

                    b.Navigation("ViewOption");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBranchEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("Branches")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBusinessLineEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.BusinessLineEntity", "BusinessLine")
                        .WithMany()
                        .HasForeignKey("BusinessLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("BusinessLines")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessLine");

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleCustomerTypeEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("CustomerTypes")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CustomerTypeEntity", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithOne("CampaignRule")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignStartTermEntity", "CampaignStartTerm")
                        .WithMany()
                        .HasForeignKey("CampaignStartTermId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.JoinTypeEntity", "JoinType")
                        .WithMany()
                        .HasForeignKey("JoinTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("CampaignStartTerm");

                    b.Navigation("JoinType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleIdentityEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithOne("RuleIdentities")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.CampaignRuleIdentityEntity", "CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTargetEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetDefinitionEntity", "TargetDefinition")
                        .WithMany()
                        .HasForeignKey("TargetDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetOperationEntity", "TargetOperation")
                        .WithMany()
                        .HasForeignKey("TargetOperationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("TargetDefinition");

                    b.Navigation("TargetOperation");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTopLimitEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.AchievementFrequencyEntity", "AchievementFrequency")
                        .WithMany()
                        .HasForeignKey("AchievementFrequencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CurrencyEntity", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AchievementFrequency");

                    b.Navigation("Campaign");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetEntity", "Target")
                        .WithOne("TargetDetail")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", "TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetSourceEntity", "TargetSource")
                        .WithMany()
                        .HasForeignKey("TargetSourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetViewTypeEntity", "TargetViewType")
                        .WithMany()
                        .HasForeignKey("TargetViewTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TriggerTimeEntity", "TriggerTime")
                        .WithMany()
                        .HasForeignKey("TriggerTimeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bbt.Campaign.Core.DbEntities.VerificationTimeEntity", "VerificationTime")
                        .WithMany()
                        .HasForeignKey("VerificationTimeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Target");

                    b.Navigation("TargetSource");

                    b.Navigation("TargetViewType");

                    b.Navigation("TriggerTime");

                    b.Navigation("VerificationTime");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupLineEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", "TargetGroup")
                        .WithMany("TargetGroupLines")
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetEntity", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("CampaignDetail")
                        .IsRequired();

                    b.Navigation("CampaignRule")
                        .IsRequired();
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("BusinessLines");

                    b.Navigation("CustomerTypes");

                    b.Navigation("RuleIdentities")
                        .IsRequired();
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetEntity", b =>
                {
                    b.Navigation("TargetDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", b =>
                {
                    b.Navigation("TargetGroupLines");
                });
#pragma warning restore 612, 618
        }
    }
}
